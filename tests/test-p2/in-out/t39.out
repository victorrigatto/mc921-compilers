Program:
    FuncDef:
        Type: int @ 2:1
        Decl: ID(name=main)
            FuncDecl:
                VarDecl:
                    Type: int @ 2:1
        Compound: @ 2:12
            Decl: ID(name=a)
                ArrayDecl:
                    ArrayDecl:
                        VarDecl:
                            Type: int @ 3:5
                        Constant: int, 10 @ 3:15
                    Constant: int, 10 @ 3:11
            Decl: ID(name=transpose)
                ArrayDecl:
                    ArrayDecl:
                        VarDecl:
                            Type: int @ 3:5
                        Constant: int, 10 @ 3:34
                    Constant: int, 10 @ 3:30
            Decl: ID(name=r)
                VarDecl:
                    Type: int @ 3:5
            Decl: ID(name=c)
                VarDecl:
                    Type: int @ 3:5
            Decl: ID(name=i)
                VarDecl:
                    Type: int @ 3:5
            Decl: ID(name=j)
                VarDecl:
                    Type: int @ 3:5
            Print: @ 4:5
                Constant: string, Enter rows and columns:  @ 4:11
            Read: @ 5:5
                ExprList: @ 5:10
                    ID: r @ 5:10
                    ID: c @ 5:13
            Print: @ 8:5
                Constant: string, \nEnter matrix elements:\n @ 8:11
            For: @ 9:5
                Assignment: = @ 9:10
                    ID: i @ 9:10
                    Constant: int, 0 @ 9:14
                BinaryOp: < @ 9:17
                    ID: i @ 9:17
                    ID: r @ 9:21
                Assignment: = @ 9:24
                    ID: i @ 9:24
                    BinaryOp: + @ 9:26
                        ID: i @ 9:26
                        Constant: int, 1 @ 9:28
                For: @ 10:9
                    Assignment: = @ 10:14
                        ID: j @ 10:14
                        Constant: int, 0 @ 10:18
                    BinaryOp: < @ 10:21
                        ID: j @ 10:21
                        ID: c @ 10:25
                    Assignment: = @ 10:28
                        ID: j @ 10:28
                        BinaryOp: + @ 10:30
                            ID: j @ 10:30
                            Constant: int, 1 @ 10:32
                    Compound: @ 10:35
                        Print: @ 11:13
                            ExprList: @ 11:19
                                Constant: string, Enter element [ @ 11:19
                                BinaryOp: + @ 11:38
                                    ID: i @ 11:38
                                    Constant: int, 1 @ 11:42
                                BinaryOp: + @ 11:45
                                    ID: j @ 11:45
                                    Constant: int, 1 @ 11:49
                                Constant: string, ]:  @ 11:52
                        Read: @ 12:13
                            ArrayRef: @ 12:18
                                ArrayRef: @ 12:18
                                    ID: a @ 12:18
                                    ID: i @ 12:20
                                ID: j @ 12:23
            Print: @ 16:5
                Constant: string, \nEntered matrix: \n @ 16:11
            For: @ 17:5
                Assignment: = @ 17:10
                    ID: i @ 17:10
                    Constant: int, 0 @ 17:14
                BinaryOp: < @ 17:17
                    ID: i @ 17:17
                    ID: r @ 17:21
                Assignment: = @ 17:24
                    ID: i @ 17:24
                    BinaryOp: + @ 17:26
                        ID: i @ 17:26
                        Constant: int, 1 @ 17:28
                For: @ 18:9
                    Assignment: = @ 18:14
                        ID: j @ 18:14
                        Constant: int, 0 @ 18:18
                    BinaryOp: < @ 18:21
                        ID: j @ 18:21
                        ID: c @ 18:25
                    Assignment: = @ 18:28
                        ID: j @ 18:28
                        BinaryOp: + @ 18:30
                            ID: j @ 18:30
                            Constant: int, 1 @ 18:32
                    Compound: @ 18:35
                        Print: @ 19:13
                            ArrayRef: @ 19:19
                                ArrayRef: @ 19:19
                                    ID: a @ 19:19
                                    ID: i @ 19:21
                                ID: j @ 19:24
                        If: @ 20:13
                            BinaryOp: == @ 20:17
                                ID: j @ 20:17
                                BinaryOp: - @ 20:22
                                    ID: c @ 20:22
                                    Constant: int, 1 @ 20:26
                            Print: @ 21:17
            For: @ 25:5
                Assignment: = @ 25:10
                    ID: i @ 25:10
                    Constant: int, 0 @ 25:14
                BinaryOp: < @ 25:17
                    ID: i @ 25:17
                    ID: r @ 25:21
                Assignment: = @ 25:24
                    ID: i @ 25:24
                    BinaryOp: + @ 25:26
                        ID: i @ 25:26
                        Constant: int, 1 @ 25:28
                For: @ 26:9
                    Assignment: = @ 26:14
                        ID: j @ 26:14
                        Constant: int, 0 @ 26:18
                    BinaryOp: < @ 26:21
                        ID: j @ 26:21
                        ID: c @ 26:25
                    Assignment: = @ 26:28
                        ID: j @ 26:28
                        BinaryOp: + @ 26:30
                            ID: j @ 26:30
                            Constant: int, 1 @ 26:32
                    Compound: @ 26:35
                        Assignment: = @ 27:13
                            ArrayRef: @ 27:13
                                ArrayRef: @ 27:13
                                    ID: transpose @ 27:13
                                    ID: j @ 27:23
                                ID: i @ 27:26
                            ArrayRef: @ 27:31
                                ArrayRef: @ 27:31
                                    ID: a @ 27:31
                                    ID: i @ 27:33
                                ID: j @ 27:36
            Print: @ 31:5
                Constant: string, \nTranspose of the matrix:\n @ 31:11
            For: @ 32:5
                Assignment: = @ 32:10
                    ID: i @ 32:10
                    Constant: int, 0 @ 32:14
                BinaryOp: < @ 32:17
                    ID: i @ 32:17
                    ID: c @ 32:21
                Assignment: = @ 32:24
                    ID: i @ 32:24
                    BinaryOp: + @ 32:26
                        ID: i @ 32:26
                        Constant: int, 1 @ 32:28
                For: @ 33:9
                    Assignment: = @ 33:14
                        ID: j @ 33:14
                        Constant: int, 0 @ 33:18
                    BinaryOp: < @ 33:21
                        ID: j @ 33:21
                        ID: r @ 33:25
                    Assignment: = @ 33:28
                        ID: j @ 33:28
                        BinaryOp: + @ 33:30
                            ID: j @ 33:30
                            Constant: int, 1 @ 33:32
                    Compound: @ 33:35
                        Print: @ 34:13
                            ArrayRef: @ 34:19
                                ArrayRef: @ 34:19
                                    ID: transpose @ 34:19
                                    ID: i @ 34:29
                                ID: j @ 34:32
                        If: @ 35:13
                            BinaryOp: == @ 35:17
                                ID: j @ 35:17
                                BinaryOp: - @ 35:22
                                    ID: r @ 35:22
                                    Constant: int, 1 @ 35:26
                            Print: @ 36:17
            Return: @ 38:5
                Constant: int, 0 @ 38:12
